# This file is autogenerated by maturin v1.8.1
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          - runner: ubuntu-22.04
            target: s390x
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config musl-tools
      - name: Set OpenSSL environment variables
        run: |
          ARCH=$(uname -m)
          if [[ "$ARCH" == "aarch64" ]]; then
            echo "OPENSSL_DIR=/usr/aarch64-linux-gnu" >> $GITHUB_ENV
            echo "PKG_CONFIG_PATH=/usr/aarch64-linux-gnu/lib/pkgconfig:/usr/local/lib/pkgconfig" >> $GITHUB_ENV
          elif [[ "$ARCH" == "armv7l" ]]; then
            echo "OPENSSL_DIR=/usr/arm-linux-gnueabihf" >> $GITHUB_ENV
            echo "PKG_CONFIG_PATH=/usr/arm-linux-gnueabihf/lib/pkgconfig:/usr/local/lib/pkgconfig" >> $GITHUB_ENV
          elif [[ "$ARCH" == "s390x" ]]; then
            echo "OPENSSL_DIR=/usr/s390x-linux-gnu" >> $GITHUB_ENV
            echo "PKG_CONFIG_PATH=/usr/s390x-linux-gnu/lib/pkgconfig:/usr/local/lib/pkgconfig" >> $GITHUB_ENV
          elif [[ "$ARCH" == "ppc64le" ]]; then
            echo "OPENSSL_DIR=/usr/powerpc64le-linux-gnu" >> $GITHUB_ENV
            echo "PKG_CONFIG_PATH=/usr/powerpc64le-linux-gnu/lib/pkgconfig:/usr/local/lib/pkgconfig" >> $GITHUB_ENV
          else
            echo "OPENSSL_DIR=/usr" >> $GITHUB_ENV
            echo "PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/local/lib/pkgconfig" >> $GITHUB_ENV
          fi
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist
  
  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
